<template>
	<view class="app">
		<view class="top">
			{{ year }} 年 {{ month + 1}} 月
		</view>
		<view class="button">
			<view @click="topMonth()">上个月</view>
			<view @click="bottomMonth()">下个月</view>
			<view @click="clickNowDay()">今日</view>
		</view>
		<view class="centen">
			<!-- 日程表 -->
			<view class="calendar">
				<view class="week">
					<view class="weeks" v-for="(item, index) in weeks" :key="index">
						{{ item.week }}
					</view>
				</view>
				<view class="day">
					<!-- @click="clickNow(year, month, i)" -->
					<view class="days" style="color: gray;" v-for="(i,x) in beforeNumberAddNum" :key="x" >
						{{i}}
					</view>
					<view class="days" v-for="(item,index) in monthDays" :key="index" @click="clickNow(year, month + 1, item)">
						{{item}}
					</view>
					<!-- @click="clickNow(year, month + 1, ite)" -->
					<view class="days" style="color: gray;" v-for="(ite,idx) in afterMonthDays" :key="idx" >
						{{ite}}
					</view>
				</view>
			</view>
		</view>
		<view class="bottom">
		</view>
	</view>
</template>

<script setup>
	// 当前时间
	const currentDate = new Date()
	// 年
	const year = ref(currentDate.getFullYear())
	// 月
	const month = ref(currentDate.getMonth())
	// 日
	const day = ref(currentDate.getDate())
	// 一共多少天
	const totleWeekDays = ref()
	// 当前月一号星期几
	const startMonthWeek = ref()
	// 当月界面完整天数
	const monthDays = ref([])
	// 当月前空数据
	const monthBeforeNull = ref()
	// 上个月数据
	const beforeMonth = ref()
	// 上个月需要补到这个月天数
	const beforeNumberAddNum = ref()
	// 下个月 补充的天数
	const afterMonthDays = ref()

	const weeks = ref([
		{
			id: 0,
			week: "日",
		},
		{
			id: 1,
			week: "一",
		},
		{
			id: 2,
			week: "二",
		},
		{
			id: 3,
			week: "三",
		},
		{
			id: 4,
			week: "四",
		},
		{
			id: 5,
			week: "五",
		}, {
			id: 6,
			week: "六",
		},
	])

	function getData() {
		// 一共多少天
		totleWeekDays.value = new Date(year.value, month.value + 1, 0).getDate()
		console.log("这个月一共：" + totleWeekDays.value)

		// 当月首天星期几
		startMonthWeek.value = new Date(year.value, month.value, 1).getDay()
		if (startMonthWeek.value === 0) {
			startMonthWeek.value += 1
		}
		console.log("这个月一号星期几：" + startMonthWeek.value)

		// 当月前空数据 通过查找周期数据返回前面有空数据
		const id = startMonthWeek.value
		const index = weeks.value.findIndex(item => item.id === id)
		const count = index > 0 ? index : 0;
		monthBeforeNull.value = count
		console.log("当月前空数据：", count)


		// 当月界面整体天数
		const monthDay = []
		for (let i = 1; i <= totleWeekDays.value; i++) {
			monthDay.push(Number(i))
		}

		const beforeMonthDayNum = new Date(year.value, month.value, 0).getDate()
		console.log("上个月补充数据：", beforeMonthDayNum)
		const beforeMonthDays = []
		for (let i = 1; i <= beforeMonthDayNum; i++) {
			beforeMonthDays.push(i)
		}
		console.log("上个月数据：", beforeMonthDays)
		beforeMonth.value = beforeMonthDays
		// 获取上个月末尾数据 并赋值
		const anum = monthBeforeNull.value
		const lastFour = beforeMonth.value.slice(- anum);
		beforeNumberAddNum.value = lastFour
		console.log("上个月补充数据：", lastFour)


		monthDays.value = monthDay
		console.log("当月总天数数组：", monthDay)
		
		// 获取下个月数据 最多35天
		const sliceArr = monthDay.slice(0, 35 - anum)
		const sliceLen = sliceArr.length
		let afterArr = []
		if(sliceLen < 35) {
			let num = 35 - sliceLen - anum
			console.log("下个月需要补齐长度：", num)
			for (let i = 1; i <= num; i++) {
				afterArr.push(i)
			}
		}
		afterMonthDays.value = afterArr
	}
	
	function topMonth() {
		if(month.value <= 0) {
			month.value = 11
			year.value = year.value - 1
		} else {
			month.value = month.value - 1
		}
		getData()
	}
	
	function bottomMonth() {
		if(month.value >= 11) {
			month.value = 0
			year.value = year.value + 1
		} else {
			month.value = month.value + 1
		}
		getData()
	}
	
	// 点击当月 后续拓展功能
	function clickNow(iyear, imonth, iday) {
		let item = 0
		const Y = JSON.stringify(iyear)
		const M = JSON.stringify(imonth)
		const D = JSON.stringify(iday)
		const now = Y + M + D
		console.log(111, now)
	}
	
	function clickNowDay() {
		const nowDate = new Date()
		year.value = nowDate.getFullYear()
		month.value = nowDate.getMonth()
		day.value = nowDate.getDay()
		getData()
	}

	onMounted(() => {
		getData()
	})
</script>


<style lang="scss">
	.app {
		display: flex;
		padding: 5rpx;
	}

	.top {
		height: 100rpx;
		background-color: antiquewhite;
	}

	.centen {
		height: 800rpx;
		background-color: azure;

		.calendar {
			background-color: aquamarine;

			.week {
				flex-direction: row;
				justify-content: space-between;
				width: 100%;
				background-color: #91d1a2;
				padding-left: 50rpx;
				padding-right: 60rpx;
				padding-top: 30rpx;
				padding-bottom: 30rpx;
				border-bottom: 1rpx solid #dadada;
			}

			.day {
				width: 100%;
				flex-direction: row;
				flex-wrap: wrap;
				align-items: flex-start;
				border-bottom: 1rpx solid #dadada;
				padding-bottom: 50rpx;

				.days {
					width: 100rpx;
					white-space: normal;
					align-items: center;
					justify-content: center;
					display: inline-grid;
					padding-left: 30rpx;
					padding-top: 50rpx;

				}
			}
		}
	}

	.bottom {}
</style>